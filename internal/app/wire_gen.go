// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/derangga/shopifyx/internal/config"
	"github.com/derangga/shopifyx/internal/http"
	"github.com/derangga/shopifyx/internal/http/handler"
	"github.com/derangga/shopifyx/internal/repository"
	"github.com/derangga/shopifyx/internal/usecase"
)

// Injectors from wire.go:

func InitHTTPServer(cfg *config.Config) http.HttpServer {
	databaseConfig := provideDBConfig(cfg)
	db := provideDB(databaseConfig)
	userRepository := repository.NewUserRepository(db)
	bankRepository := repository.NewBankRepository(db)
	unitOfWork := repository.NewUnitOfWork(db)
	productRepository := repository.NewProductRepository(db)

	authConfig := provideAuthConfig(cfg)
	authUsecase := usecase.NewAuthUsecase(userRepository, unitOfWork, authConfig)
	bankUsecase := usecase.NewBankUsecase(bankRepository)
	productUsecase := usecase.NewProductUsecase(productRepository, unitOfWork)

	validate := provideValidator()
	authHandler := handler.NewAuthHandler(authUsecase, validate)
	bankHandler := handler.NewBankHandler(bankUsecase, validate)
	productHandler := handler.NewProductHandler(productUsecase, validate)
	handlers := handler.NewHandlers(authHandler, bankHandler, productHandler)

	jwtAuth := provideJWTAuth(authConfig)
	httpServer := http.NewHttpServer(cfg, handlers, jwtAuth)
	return httpServer
}
